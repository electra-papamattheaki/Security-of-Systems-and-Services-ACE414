*** README File - Assignment 4 ***

Ilektra-Despoina Papamatthaiaki, AM: 2018030106

--gcc version
gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
Copyright (C) 2021 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

-----------------------------------------------------------------------------------------------------

Tasks:

1. Bypass the login page using an SQL injection query and log in as “user”:

To solve this I looked into the code of "app.py" and found this line of code that can be tricked:
query = f"SELECT * FROM users WHERE username = 'user' AND password = '{password}'"

So, all I need to do is create a true statement to avoid entering a password. Also, at the end you want to add '--' so everything else becomes a comment. This can be done by using ' OR TRUE --, or
' OR 1=1 -- which creates the following queeries when you enter the password:

SELECT * FROM users WHERE username = 'user' AND password = '' OR TRUE -- '
SELECT * FROM users WHERE username = 'user' AND password = '' OR 1=1 --  '

The second part is always true and in this way I have created a valid SQL Statement and the app lets me access the dashboard. 

To conclude you type at the "Enter User Password" field the following (A or B, both work):
A. ' OR TRUE --
B. ' OR 1=1 --

2. When logged in use the search functionality to retrieve information from the ‘users’ table instead of ‘items’:

To solve this I looked into the code of "app.py" and found this line of code that can be tricked:
query = f"SELECT name,category,price FROM items WHERE name = '{name}'"

So, all I need to do is create a statement that ignores the tables items and shows the table users. I will use the UNION operator. The UNION operator is used to combine the result-set of two or more SELECT statements. So, by entering ' UNION SELECT * FROM users -- you create the following query:

SELECT name,category,price FROM items WHERE name = '' UNION SELECT * FROM users --'

Since no name is empty, you only get the results from " SELECT * FROM users -- " and you have the comment in the end so everything else that follows is ignored. 
With this line of code (in app.py) "results = res.fetchall()[0]" you get the results and you can see that the password of the superadmin is:
sup3r4dm1nP@5sw0rd

3. Find the “superadmin’s” password and login in to the admin dashboard:

Now, all I have to do is go back and enter the password that I found in http://140.238.219.114:1337/admin
And the trophy that I got is:
TUC{SQLi_1s_4w3s0m3_NGL_4nd_th3_sky_1s_blu3}

